@model MultiPlug.Base.Http.EdgeApp
@functions {
    public string IsChecked(bool isSave)
    {
        return isSave ? "checked" : string.Empty;
    }
}

<section class="row-fluid">
    @Include("MultiPlug.Ext.Recipe.File.RecipeFile_Navigation")

    <div class="row-fluid">
        <div class="box">
            <h4>Main Recipe</h4>
            <div class="row-fluid well">
                <div class="span3">
                    <div class="row-fluid"><div class="span12"><h5>Action</h5></div></div>
                    <div class="row-fluid"><div class="span12"><a class="btn action-push" href="@Raw(Model.Context.Paths.APIs)push/Recipe"><i class="icon-signin"></i> Push to MultiPlug</a></div></div>
                </div>
                <div class="span3">
                    <div class="row-fluid"><div class="span12"><h5>Action</h5></div></div>
                    <div class="row-fluid"><div class="span12"><a class="btn" href="@Raw(Model.Context.Paths.APIs)download/Recipe.json" download><i class="icon-download-alt"></i> Download Recipe</a></div></div>
                </div>
                <div class="span3">
                    <div class="row-fluid"><div class="span12"><h5>Last Read</h5></div></div>
                    <div class="row-fluid"><div class="span12"><p>@Model.Extension.Model.LastRead</p></div></div>
                </div>
                <div class="span3">
                    <div class="row-fluid"><div class="span12"><h5>Last Write</h5></div></div>
                    <div class="row-fluid"><div class="span12"><p>@Model.Extension.Model.LastWrite</p></div></div>
                </div>
            </div>

            <h4>Main Recipe Items</h4>
            <p>These are the configurations found within the file.</p>
            <div class="row-fluid well">
                <div class="row-fluid">
                    <div class="span5">
                        <div class="row-fluid"><div class="span12"><h5>Extension</h5></div></div>
                    </div>
                    <div class="span1">
                        <div class="row-fluid"><div class="span12"><h5>Save</h5></div></div>

                    </div>
                    <div class="span2">
                        <div class="row-fluid"><div class="span12"><h5>Overwrite</h5></div></div>

                    </div>
                    <div class="span1">
                        <div class="row-fluid"><div class="span12"><h5>Edit</h5></div></div>

                    </div>
                    <div class="span2">
                        <div class="row-fluid"><div class="span12"><h5>Download</h5></div></div>
                    </div>
                    <div class="span1">
                        <div class="row-fluid"><div class="span12"><h5>Push</h5></div></div>
                    </div>
                </div>

                @foreach (var Extension in @Model.Extension.Model.Extensions)
                {
                    <div class="row-fluid">
                        <div class="span5">
                            <div class="row-fluid">
                                <div class="span12">@Extension.Name</div>
                            </div>
                        </div>
                        <div class="span1">
                            <div class="row-fluid">
                                <div class="span12">
                                    <input class="action-setsave" id="ExtensionName-@Extension.Name" type="checkbox" @IsChecked(Extension.Save)>
                                </div>
                            </div>
                        </div>
                        <div class="span2">
                            <div class="row-fluid">
                                <div class="span12">
                                    <input class="action-setoverwrite" id="ExtensionName-@Extension.Name" type="checkbox" @IsChecked(Extension.Overwrite)>
                                </div>
                            </div>
                        </div>
                        <div class="span1">
                            <div class="row-fluid">
                                <div class="span12">
                                    <a href="@Raw(Model.Context.Paths.Home)editor/?extension=@Extension.Name"><i class="icon-edit"></i></a>
                                </div>
                            </div>
                        </div>
                        <div class="span2">
                            <div class="row-fluid">
                                <div class="span12">
                                    <a href="@Raw(Model.Context.Paths.APIs)download/@(Extension.Name).json" download><i class="icon-download-alt"></i></a>
                                </div>
                            </div>
                        </div>
                        <div class="span1">
                            <div class="row-fluid">
                                <div class="span12">
                                    <a class="action-push" href="@Raw(Model.Context.Paths.APIs)push/@(Extension.Name)"><i class="icon-signin"></i></a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

</section>

<script>
    $(".action-push").click(function (event) {
        event.preventDefault()

        var href = $(this).attr('href');

        if (confirm("Are you sure you want to Push the Recipe to MultiPlug?"))
        {
            $.ajax({
                type: "POST",
                url: href,
                success: function () {
                    alert("Recipe Push Complete");
                    location.reload();
                },
            });
        }
    });

    $('.action-setsave').click(function () {
        var shouldSave = "false";

        if (this.checked) {
            shouldSave = "true"
        }

        var Extension = $(this).attr('id');
        Extension = Extension.replace("ExtensionName-", "");

        $.ajax({
            type: "POST",
            url: '@Raw(Model.Context.Paths.APIs)setsave/',
            data: { extension: Extension, save: shouldSave },
            success: function (data) {
            },
            error: function () {
            },
            complete: function () {
            }
        });
    });

    $('.action-setoverwrite').click(function () {
        var shouldOverwrite = "false";

        if (this.checked) {
            shouldOverwrite = "true"
        }

        var Extension = $(this).attr('id');
        Extension = Extension.replace("ExtensionName-", "");

        $.ajax({
            type: "POST",
            url: '@Raw(Model.Context.Paths.APIs)setoverwrite/',
            data: { extension: Extension, overwrite: shouldOverwrite },
            success: function (data) {
            },
            error: function () {
            },
            complete: function () {
            }
        });
    });
</script>


